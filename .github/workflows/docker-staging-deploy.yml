name: API - Staging Deploy

on: workflow_dispatch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
      uses: docker/login-action@v3.1.0
      with:
       # Server address of Docker registry. If not set then will default to Docker Hub
       registry: # optional
       # Username used to log against the Docker registry
       username: ${{ secrets.DOCKER_HUB_USERNAME }}
       # Password or personal access token used to log against the Docker registry
       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
       # Specifies whether the given registry is ECR (auto, true or false)
       ecr: # optional, default is auto
       # Log out from the Docker registry at the end of a job
       logout: true # optional, default is true

    - name: Build and push Docker images
      run: |
        docker build -t bookmarx-api:${{ github.sha }} -f Dockerfile .
        docker push bookmarx-api:${{ github.sha }}

    # Transform the values in the compose.yaml file for targeted release

    # Make a temp folder in the temp folder to store the files to make it easier to move them all at once

    # Upload the appropriate .env file to the server in a /tmp directory
    
    # Upload the firebase json file to the server in a /tmp directory
    
    # Upload the compose.yaml file to the server in a /tmp directory

    # Move the tmp uploaded files to the root container directory

    #- name: Deploy to server
    #  uses: appleboy/ssh-action@master
    #  with:
    #    host: ${{ secrets.SERVER_HOST }}
    #    username: ${{ secrets.SERVER_USERNAME }}
    #    key: ${{ secrets.SERVER_SSH_KEY }}
    #    script: |
    #      docker compose pull
    #      docker compose -f ${{ secrets.API_CONTAINER_PATH }}/compose.yaml up -d --no-deps
